---
- hosts: openshift_nodes
  vars:
    rhn_user: "{{ lookup('env','RHN_USER') }}"
    rhn_pass: "{{ lookup('env','RHN_PASS') }}"
    installer_cfg: "{{ inventory_dir }}/installer.cfg.yml"
    example_hosts: "{{ inventory_dir }}/example_hosts"
    ssh_key_private: "{{ inventory_dir }}/openshift_aws"
    ssh_key_public: "{{ inventory_dir }}/openshift_aws.pub"
    ose_installer: "{{ inventory_dir }}/oo-install-ose.tgz"
    ansible_user: "{{ lookup('env','ANSIBLE_USER') }}"
  remote_user: "{{ ansible_user }}"
  sudo: "{{ lookup('env','ANSIBLE_SUDO') }}"
  tasks:
  - name: Register System with RHN
    command: subscription-manager register --username={{ rhn_user }} --password="{{ rhn_pass }}" --force
  - name: Attach to the correct pool
    command: subscription-manager attach --pool=8a85f9843e3d687a013e3ddd471a083e
  - name: Disable all Repositories
    command: subscription-manager repos --disable="*"
  - name: Enable all OpenShift Dependencies
    command: subscription-manager repos --enable="rhel-7-server-rpms" --enable="rhel-7-server-extras-rpms" --enable="rhel-7-server-optional-rpms" --enable="rhel-7-server-ose-3.0-rpms"
  - name: Install deltarpm
    yum: name=deltarpm state=present
  - name: Remove Network Manager
    yum: name="NetworkManager-adsl,NetworkManager-bluetooth,NetworkManager-config-routing-rules,NetworkManager-config-server,NetworkManager-devel,NetworkManager-glib,NetworkManager-glib-devel,NetworkManager-libnm,NetworkManager-libnm-devel,NetworkManager-libreswan,NetworkManager-libreswan-gnome,NetworkManager-team,NetworkManager-tui,NetworkManager-wifi,NetworkManager-wwan,NetworkManager" state=absent
  - name: Install basic packages
    yum: name="wget,git,net-tools,bind-utils,iptables-services,bridge-utils,vim,python-virtualenv,gcc,httpd-tools" state=present
  - name: Update the Base System
    yum: name=* state=latest
  - name: Install Docker
    yum: name=docker state=present
  - name: Enable insecure Registries
    command: sed -i -e "s|^OPTIONS='--selinux-enabled'|OPTIONS='--selinux-enabled --insecure-registry 0.0.0.0/0'|" /etc/sysconfig/docker
  - name: Remove any docker leftovers
    command: rm -rf /var/lib/docker/*
  - name: Start the Docker Service
    service: name=docker state=restarted
  - command: docker pull registry.access.redhat.com/openshift3/ose-haproxy-router
  - command: docker pull registry.access.redhat.com/openshift3/ose-deployer
  - command: docker pull registry.access.redhat.com/openshift3/ose-sti-builder
  - command: docker pull registry.access.redhat.com/openshift3/ose-sti-image-builder
  - command: docker pull registry.access.redhat.com/openshift3/ose-docker-builder
  - command: docker pull registry.access.redhat.com/openshift3/ose-pod
  - command: docker pull registry.access.redhat.com/openshift3/ose-docker-registry
# - command: docker pull registry.access.redhat.com/openshift3/sti-basicauthurl
  - command: docker pull registry.access.redhat.com/openshift3/ose-keepalived-ipfailover
  - command: docker pull registry.access.redhat.com/openshift3/ruby-20-rhel7
  - command: docker pull registry.access.redhat.com/openshift3/mysql-55-rhel7
  - command: docker pull registry.access.redhat.com/openshift3/php-55-rhel7
  - command: docker pull registry.access.redhat.com/jboss-eap-6/eap-openshift
  - command: docker pull openshift/hello-openshift
  - name: Copy authorized_key to systems
    authorized_key: user={{ ansible_user }} key="{{lookup('file', ssh_key_public) }}"

## Now let us do the work specific to the master
- hosts: openshift_master
  vars:
    rhn_user: "{{ lookup('env','RHN_USER') }}"
    rhn_pass: "{{ lookup('env','RHN_PASS') }}"
    installer_cfg: "{{ inventory_dir }}/installer.cfg.yml"
    example_hosts: "{{ inventory_dir }}/example_hosts"
    ssh_key_private: "{{ inventory_dir }}/openshift_aws"
    ssh_key_public: "{{ inventory_dir }}/openshift_aws.pub"
    ose_installer: "{{ inventory_dir }}/oo-install-ose.tgz"
    ansible_user: "{{ lookup('env','ANSIBLE_USER') }}"
  remote_user: "{{ ansible_user }}"
  sudo: "{{ lookup('env','ANSIBLE_SUDO') }}"
  tasks:
  - copy: src={{ ssh_key_private }} dest=/root/.ssh/id_rsa owner=root group=root mode=0400
  - copy: src={{ ssh_key_public }} dest=/root/.ssh/id_rsa.pub owner=root group=root mode=0400
  - copy: src={{ ose_installer }} dest=/root/oo-install-ose.tgz owner=root mode=0600
  - file: path=/root/.config state=directory
  - file: path=/root/.config/openshift state=directory
  - file: path=/root/.config/openshift/.ansible state=directory
  - copy: src={{ installer_cfg }} dest=/root/.config/openshift/installer.cfg.yml owner=root mode=0644
  - copy: src={{ example_hosts }} dest=/root/.config/openshift/.ansible/hosts owner=root mode=0644
